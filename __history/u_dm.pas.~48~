unit u_dm;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.PG,
  FireDAC.Phys.PGDef, FireDAC.VCLUI.Wait, Data.DB, FireDAC.Comp.Client,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt,
  FireDAC.Comp.DataSet, u_cliente;

type
  TDM = class(TDataModule)
    Conn: TFDConnection;
    FDPhysPgDriverLink: TFDPhysPgDriverLink;
    Query: TFDQuery;
    QryConsultaClientes: TFDQuery;
    QryConsultaClientescli_codigo: TIntegerField;
    QryConsultaClientescli_nome: TWideStringField;
    QryConsultaClientescli_cpf: TWideStringField;
    QryConsultaClientescli_rg: TWideStringField;
    QryConsultaClientescli_cnpj: TWideStringField;
    QryConsultaClientescli_tipo_pessoa: TIntegerField;
    QryConsultaClientescli_endereco: TWideStringField;
    QryConsultaClientescli_numero: TWideStringField;
    QryConsultaClientescli_cep: TWideStringField;
    QryConsultaClientescli_cidade: TWideStringField;
    QryConsultaClientescli_uf: TWideStringField;
    QryConsultaClientescli_limite_credito: TBCDField;
    QryConsultaClientescli_dthr_cadastro: TSQLTimeStampField;
    DSConsultaClientes: TDataSource;
  private
    { Private declarations }
  public
    { Public declarations }
    function Inserir(Value : TCliente): Integer;
    function Alterar(Value : TCliente): Integer;
    function Get(Value : integer): TCliente;

    function GetUltimo : integer;
    function GetProximo : integer;
    function GetAnterior : integer;
    function GetPrimeiro : integer;
  end;

var
  DM: TDM;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

{ TDM }

function TDM.Alterar(Value: TCliente): Integer;
begin

end;

function TDM.Get(Value: integer): TCliente;
  var sqlTmp : string;
      Cliente : TCliente;
begin
  Cliente := Nil;
  sqlTmp := 'select * from cliente where cli_codigo = :cli_codigo ';

  with Query do
  begin
    Close;
    SQL.Clear;
    SQL.Add(sqlTmp);
    ParamByName('cli_codigo').AsInteger := Value;
    Open();
    if RecordCount > 0 then
    begin
      Cliente := TCliente.Create;
      Cliente.TipoPessoa     := FieldByName('cli_tipo_pessoa').AsInteger;
      Cliente.Codigo         := FieldByName('cli_codigo').AsInteger;
      Cliente.Nome           := FieldByName('cli_nome').AsString;
      Cliente.CPF            := FieldByName('cli_cpf').AsString;
      Cliente.RG             := FieldByName('cli_rg').AsString;
      Cliente.DataNascimento := FieldByName('cli_data_nascimento').AsDateTime;

      Cliente.RazaoSocial    := FieldByName('cli_razao_social').AsString;
      Cliente.NomeFantasia   := FieldByName('cli_nome_fantasia').AsString;
      Cliente.CNPJ           := FieldByName('cli_cnpj').AsString;

      Cliente.Endereco       := FieldByName('cli_endereco').AsString;
      Cliente.Numero         := FieldByName('cli_numero').AsString;
      Cliente.CEP            := FieldByName('cli_cep').AsString;
      Cliente.Cidade         := FieldByName('cli_cidade').AsString;
      Cliente.UF             := FieldByName('cli_uf').AsString;
//      Cliente.LimiteCredito  := FieldByName('cli_limite_credito').AsString;
    end;
  end;
  Result := Cliente;
end;

function TDM.GetAnterior: integer;
begin

end;

function TDM.GetPrimeiro: integer;
  var sqlTmp : string;
begin
  sqlTmp := 'select min(cli_codigo) as r from cliente';

end;

function TDM.GetProximo: integer;
begin

end;

function TDM.GetUltimo: integer;
  var sqlTmp : string;
begin
  sqlTmp := 'select max(cli_codigo) as r from cliente';

end;

function TDM.Inserir(Value: TCliente): Integer;
  var sql : string;
begin
  sql := ' insert into cliente ( '
  + ' cli_nome,                  '
  + ' cli_cpf,                   '
  + ' cli_rg,                    '
  + ' cli_cnpj,                  '
  + ' cli_tipo_pessoa,           '
  + ' cli_endereco,              '
  + ' cli_numero,                '
  + ' cli_cep,                   '
  + ' cli_cidade,                '
  + ' cli_uf,                    '
  + ' cli_limite_credito         '
  + ') values (                  '
  + ' :cli_nome,                 '
  + ' :cli_cpf,                  '
  + ' :cli_rg,                   '
  + ' :cli_cnpj,                 '
  + ' :cli_tipo_pessoa,          '
  + ' :cli_endereco,             '
  + ' :cli_numero,               '
  + ' :cli_cep,                  '
  + ' :cli_cidade,               '
  + ' :cli_uf,                   '
  + ' :cli_limite_credito        '
  + ' ) ';

  try
    with Query do
    begin
      ParamByName('cli_nome').AsString := Value.Nome;
      ParamByName('cli_cpf').AsString := Value.Nome;
      ParamByName('cli_rg').AsString := Value.Nome;
      ParamByName('cli_cnpj').AsString := Value.Nome;
      ParamByName('cli_tipo_pessoa').AsString    := Value.Nome;
      ParamByName('cli_endereco').AsString       := Value.Nome;
      ParamByName('cli_numero').AsString         := Value.Nome;
      ParamByName('cli_cep').AsString            := Value.Nome;
      ParamByName('cli_cidade').AsString         := Value.Nome;
      ParamByName('cli_uf').AsString             := Value.Nome;
      ParamByName('cli_limite_credito').AsString := Value.Nome;
    end;

  finally

  end;

end;

end.
